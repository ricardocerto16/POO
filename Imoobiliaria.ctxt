#BlueJ class context
comment0.params=utilizadores\ imoveis
comment0.target=Imoobiliaria(java.util.Set,\ java.util.Map)
comment0.text=\ \r\n\ Construtor\ da\ Imoobiliaria.\r\n
comment1.params=
comment1.target=Imoobiliaria()
comment1.text=\ \r\n\ Construtor\ vazio\ da\ Imoobiliaria.\r\n
comment10.params=
comment10.target=java.util.List\ getConsultas()
comment10.text=\ \r\n\ Retorna\ uma\ lista\ com\ as\ datas\ (e\ emails,\ caso\ exista\ essa\ informa\u00E7\u00E3o)\ das\ 10\ \u00FAltimas\ \r\n\ consultas\ aos\ im\u00F3veis\ que\ o\ utilizador\ actual\ tem\ para\ venda.\r\n
comment11.params=idImovel\ estado
comment11.target=void\ setEstado(java.lang.String,\ java.lang.String)
comment11.text=\ \r\n\ Permite\ alterar\ o\ estado\ de\ um\ im\u00F3vel\ do\ utilizador\ actual,\ de\ acordo\ com\ as\ ac\u00E7\u00F5es\ feitas\ sobre\ ele;\r\n
comment12.params=n
comment12.target=java.util.Set\ getTopImoveis(int)
comment12.text=\ \r\n\ Permite\ obter\ um\ conjunto\ com\ os\ c\u00F3digos\ dos\ im\u00F3veis\ mais\ consultados\ (ou\ seja,\r\n\ com\ mais\ de\ N\ consultas)\ do\ utilizador\ actual.\r\n
comment13.params=classe\ preco
comment13.target=java.util.List\ getImovel(java.lang.String,\ int)
comment13.text=\ \r\n\ Retorna\ a\ lista\ de\ todos\ os\ im\u00F3veis\ de\ um\ dado\ tipo\ (Terreno,\ Moradia,\ Loja,\ LojaHabitavel,\ Apartamento)\r\n\ e\ at\u00E9\ um\ certo\ pre\u00E7o.\r\n
comment14.params=preco
comment14.target=java.util.List\ getHabitaveis(int)
comment14.text=\ \r\n\ Retorna\ a\ lista\ de\ todos\ os\ im\u00F3veis\ habit\u00E1veis\ (at\u00E9\ um\ certo\ pre\u00E7o).\r\n
comment15.params=
comment15.target=java.util.Map\ getMapeamentoImoveis()
comment15.text=\ \r\n\ Retorna\ um\ mapeamento\ entre\ todos\ os\ im\u00F3veis\ e\ respectivos\ vendedores.\r\n
comment16.params=idImovel
comment16.target=Imovel\ temImovel(java.lang.String)
comment16.text=\ \r\n\ Verifica\ se\ um\ determinado\ id\ pertence\ a\ algum\ Im\u00F3vel\ da\ Imoobiliaria\ e\ retorna-o\ caso\ exista.\r\n
comment17.params=idImovel
comment17.target=void\ setFavorito(java.lang.String)
comment17.text=\ \r\n\ Permite\ ao\ utilizador\ actual\ marcar\ um\ im\u00F3vel\ como\ favorito.\r\n
comment18.params=
comment18.target=java.util.TreeSet\ getFavoritos()
comment18.text=\ \r\n\ Retorna\ uma\ \u00E1rvore\ com\ os\ im\u00F3veis\ favoritos\ do\ utilizador\ actual,\ ordenados\ por\ pre\u00E7o.\r\n
comment19.params=im\ horas
comment19.target=void\ iniciaLeilao(Imovel,\ int)
comment19.text=\ \r\n\ Permite\ ao\ utilizador\ actual\ iniciar\ um\ Leil\u00E3o,\ com\ um\ dado\ Im\u00F3vel\ e\ durante\ um\ determinado\ per\u00EDodo.\r\n
comment2.params=
comment2.target=java.lang.String\ getNome()
comment2.text=\ \r\n\ Retorna\ o\ nome\ do\ utilizador\ que\ est\u00E1\ actualmente\ no\ sistema.\r\n
comment20.params=idComprador\ limite\ incrementos\ minutos
comment20.target=void\ adicionaComprador(java.lang.String,\ double,\ double,\ double)
comment20.text=\ \r\n\ Permite\ adicionar\ um\ Comprador\ ao\ Leil\u00E3o\ actual.\r\n
comment21.params=
comment21.target=void\ correLeilao()
comment21.text=\ \r\n\ Permite\ que\ o\ Leil\u00E3o\ arranque,\ imprimindo\ todos\ os\ acontecimentos\ do\ mesmo.\ \r\n
comment22.params=
comment22.target=Comprador\ encerraLeilao()
comment22.text=\ \r\n\ Permite\ encerrar\ o\ Leil\u00E3o\ actual,\ imprimindo\ o\ vencedor\ do\ mesmo.\r\n
comment23.params=fich
comment23.target=void\ gravaObj(java.lang.String)
comment23.text=\ \r\n\ Respons\u00E1vel\ por\ gravar\ o\ estado\ da\ aplica\u00E7\u00E3o.\r\n
comment24.params=fich
comment24.target=Imoobiliaria\ leObj(java.lang.String)
comment24.text=\ \r\n\ Respons\u00E1vel\ alterar\ o\ estado\ da\ aplica\u00E7\u00E3o.\r\n
comment25.params=f\ ap
comment25.target=void\ log(java.lang.String,\ boolean)
comment25.text=\ \r\n\ Respons\u00E1vel\ por\ imprimir\ para\ um\ ficheiro\ o\ estado\ da\ aplica\u00E7\u00E3o.\r\n
comment3.params=
comment3.target=boolean\ temVend()
comment3.text=\ \r\n\ Verifica\ se\ o\ utilizador\ que\ est\u00E1\ actualmente\ no\ sistema\ \u00E9\ um\ Vendedor.\r\n
comment4.params=
comment4.target=boolean\ temComp()
comment4.text=\ \r\n\ Verifica\ se\ o\ utilizador\ que\ est\u00E1\ actualmente\ no\ sistema\ \u00E9\ um\ Comprador.\r\n
comment5.params=
comment5.target=boolean\ temUt()
comment5.text=\ \r\n\ Verifica\ se\ existe\ actualmente\ algum\ utilizador\ no\ sistema.\r\n
comment6.params=utilizador
comment6.target=void\ registarUtilizador(Utilizador)
comment6.text=\ \r\n\ Regista\ um\ utilizador\ no\ sistema.\r\n
comment7.params=email\ password
comment7.target=void\ iniciaSessao(java.lang.String,\ java.lang.String)
comment7.text=\ \r\n\ Permite\ um\ utilizador\ iniciar\ sess\u00E3o\ no\ sistema.\r\n
comment8.params=
comment8.target=void\ fechaSessao()
comment8.text=\ \r\n\ Permite\ um\ utilizador\ terminar\ a\ sess\u00E3o\ no\ sistema.\r\n
comment9.params=im
comment9.target=void\ registaImovel(Imovel)
comment9.text=\ \r\n\ Permite\ registar\ um\ Im\u00F3vel\ no\ sistema.\r\n
numComments=26
